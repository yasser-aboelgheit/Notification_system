> import os
> import datetime
  
  # Build paths inside the project like this: os.path.join(BASE_DIR, ...)
> BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
  
  
  # Quick-start development settings - unsuitable for production
  # See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/
  
  # SECURITY WARNING: keep the secret key used in production secret!
> SECRET_KEY = 'plsq5&4ka)n!_ciirn-dvv0q$%6u3ys9-#4q*=rcf#azrgf2j4'
  
  # SECURITY WARNING: don't run with debug turned on in production!
> DEBUG = True
  
> ALLOWED_HOSTS = []
  
  
  # Application definition
  
> INSTALLED_APPS = [
>     'django.contrib.admin',
>     'django.contrib.auth',
>     'django.contrib.contenttypes',
>     'django.contrib.sessions',
>     'django.contrib.messages',
>     'django.contrib.staticfiles',
>     'rest_framework',
      # 'Third party apps',
>     'django_extensions',
>     'rest_framework.authtoken',
>     'drf_yasg',
      # project apps
>     'accounts',
>     'notifications',
>     'trips',
> ]
  
> MIDDLEWARE = [
>     'django.middleware.security.SecurityMiddleware',
>     'django.contrib.sessions.middleware.SessionMiddleware',
>     'django.middleware.common.CommonMiddleware',
>     'django.middleware.csrf.CsrfViewMiddleware',
>     'django.contrib.auth.middleware.AuthenticationMiddleware',
>     'django.contrib.messages.middleware.MessageMiddleware',
>     'django.middleware.clickjacking.XFrameOptionsMiddleware',
> ]
  
> ROOT_URLCONF = 'notification_system.urls'
  
> TEMPLATES = [
>     {
>         'BACKEND': 'django.template.backends.django.DjangoTemplates',
>         'DIRS': [],
>         'APP_DIRS': True,
>         'OPTIONS': {
>             'context_processors': [
>                 'django.template.context_processors.debug',
>                 'django.template.context_processors.request',
>                 'django.contrib.auth.context_processors.auth',
>                 'django.contrib.messages.context_processors.messages',
>             ],
>         },
>     },
> ]
  
> WSGI_APPLICATION = 'notification_system.wsgi.application'
  
  
  # Database
  # https://docs.djangoproject.com/en/2.2/ref/settings/#databases
  
> DATABASES = {
>     'default': {
>         'ENGINE': 'django.db.backends.sqlite3',
>         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
>     }
> }
  
  
  # Password validation
  # https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators
  
> AUTH_PASSWORD_VALIDATORS = [
>     {
>         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
>     },
>     {
>         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
>     },
>     {
>         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
>     },
>     {
>         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
>     },
> ]
  
  
  # Internationalization
  # https://docs.djangoproject.com/en/2.2/topics/i18n/
  
  
  
> STATIC_URL = '/static/'
> REST_FRAMEWORK = {
>     'DEFAULT_AUTHENTICATION_CLASSES': (
>         'rest_framework.authentication.TokenAuthentication',
>         'rest_framework.authentication.SessionAuthentication',
>         'rest_framework_simplejwt.authentication.JWTAuthentication',
>     ),
>     'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema'
> }
> SWAGGER_SETTINGS = { 'SECURITY_DEFINITIONS': { 'api_key': { 'type': 'apiKey', 'in': 'header', 'name': 'Authorization' } }, }
  
  # Celery without docker
> CELERY_BROKER_URL = 'redis://localhost:6379/0'
> CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
> CELERY_ACCEPT_CONTENT = ['application/json']
> CELERY_RESULT_SERIALIZER = 'json'
> CELERY_TASK_SERIALIZER = 'json'
> CELERY_ACKS_LATE = True
> CELERYD_PREFETCH_MULTIPLIER = 1
  
  # CELERY in Docker
  # CELERY_BROKER_URL = os.environ.get("CELERY_BROKER", "redis://redis:6379/0")
  # CELERY_RESULT_BACKEND = os.environ.get("CELERY_BROKER", "redis://redis:6379/0")
  
> LOGGING = {
>     'version': 1,
>     'disable_existing_loggers': False,
>     'formatters': {
>     },
>     'handlers': {
>         'file': {
>             'level': 'INFO',
>             'class': 'logging.FileHandler',
>             'filename': 'debug.log'
>         }
>     },
>     'loggers': {
>         'notify_logger': {
>             'handlers': ['file'],
>             'level': 'INFO',
>         }
>     }
> }
  
> SIMPLE_JWT = {
>     'ACCESS_TOKEN_LIFETIME': datetime.timedelta(minutes=30),
>     'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=1),
> }
  
> LANGUAGE_CODE = 'en-us'
  
> TIME_ZONE = 'UTC'
  
> USE_I18N = True
  
> USE_L10N = True
  
> USE_TZ = True
